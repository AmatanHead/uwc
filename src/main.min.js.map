{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main.min.js","sourcesContent":["/* Message specification:\n *\n * r: round id, a unique identifier for a single wave.\n * t: type of the algorithm, can be 'message', 'min', 'graph'.\n *\n *\n * For 'message' algorithm:\n *\n * sender: id of the original sender\n * message: message\n *\n *\n * For 'min' algorithm:\n *\n * mt: message type, can be 'request' or 'response'.\n * value: a minimal value known to the sender. May be null, than client should ignore the sender.\n * client: who owns that minimal value.\n *\n *\n * * For 'graph' algorithm:\n *\n * mt: message type, can be 'request' or 'response'.\n * value: a part of graph known to the sender.\n *\n */\n\nfunction broadcast(data, connections, parentId) {\n    const values = connections.values();\n    for (let i = 0; i < values.length; i += 1) {\n        if (values[i].open && values[i].peer !== parentId) {\n            values[i].send(data);\n        }\n    }\n}\n\n\nfunction GraphAlgorithm(parentConnection, data, connections, chat) {\n    const isInitializer = parentConnection === null;\n\n    if (isInitializer) { chat.displayHtml('Requesting graph...'); }\n\n    broadcast(data, connections, parentConnection === null ? null : parentConnection.peer);\n\n    let responsesToGo = chat.countActiveConnections() - !isInitializer;\n\n    const value = {};\n    value[chat.peer.id] = [];\n    connections.each((connection) => { if (connection.open) { value[chat.peer.id].push(connection.peer); } });\n\n    function displayGraph() {\n        const nodes = [];\n        const links = [];\n\n        console.log(value);\n\n        for (let src in value) {\n            if (!value.hasOwnProperty(src)) { continue; }\n            nodes.push({id: src});\n            for (let i = 0; i < value[src].length; i += 1) {\n                links.push({source: src, target: value[src][i]});\n            }\n        }\n\n        console.log(nodes, links);\n\n        chat.displayHtml(`<svg width=\"400\" height=\"200\" id=\"G${data.r}\"></svg>`);\n        const svg = d3.select(`#G${data.r}`);\n        const width = +svg.attr('width');\n        const height = +svg.attr('height');\n\n        const simulation = d3.forceSimulation()\n            .force('link', d3.forceLink().id(d => d.id))\n            .force('charge', d3.forceManyBody())\n            .force('center', d3.forceCenter(width / 2, height / 2));\n\n        const link = svg.append('g')\n            .attr('class', 'links')\n            .selectAll('line')\n            .data(links)\n            .enter().append('line');\n\n        const node = svg.append('g')\n            .attr('class', 'nodes')\n            .selectAll('circle')\n            .data(nodes)\n            .enter().append('g')\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended));\n\n        node.append('circle')\n            .attr('r', 2.5)\n            .classed('nodes-you', (d) => d.id === chat.peer.id );\n\n        node.append('text')\n            .attr('x', 5)\n            .attr('y', 3)\n            .text(d => d.id);\n\n        simulation\n            .nodes(nodes)\n            .on('tick', ticked);\n\n        simulation\n            .force('link')\n            .links(links);\n\n        function ticked() {\n            link\n                .attr('x1', d => d.source.x)\n                .attr('y1', d => d.source.y)\n                .attr('x2', d => d.target.x)\n                .attr('y2', d => d.target.y);\n\n            node\n                .attr('transform', d => `translate(${d.x}, ${d.y})`);\n        }\n\n        function dragstarted(d) {\n            if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n        }\n\n        function dragged(d) {\n            d.fx = d3.event.x;\n            d.fy = d3.event.y;\n        }\n\n        function dragended(d) {\n            if (!d3.event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n        }\n    }\n\n    function maybeSendResult() {\n        if (responsesToGo === 0) {\n            if (isInitializer) {\n                displayGraph();\n            } else {\n                parentConnection.send({r: data.r, t: data.t, mt: 'response', value: value})\n            }\n        }\n    }\n\n    this.onMessage = (data, connection) => {\n        if (data.mt === 'response') {\n            responsesToGo -= 1;\n            if (data.value !== null) {\n                for (let id in data.value) {\n                    if (data.value.hasOwnProperty(id)) {\n                        value[id] = data.value[id];\n                    }\n                }\n            }\n            maybeSendResult();\n        } else {\n            connection.send({r: data.r, t: data.t, mt: 'response', value: null});\n        }\n    };\n\n    maybeSendResult();\n}\n\n\nfunction MinAlgorithm(parentConnection, data, connections, chat) {\n    const isInitializer = parentConnection === null;\n\n    if (isInitializer) { chat.displayHtml('Requesting min...'); }\n\n    broadcast(data, connections, parentConnection === null ? null : parentConnection.peer);\n\n    let responsesToGo = chat.countActiveConnections() - !isInitializer;\n\n    let value = chat.value;\n    let client = chat.peer.id;\n\n    function maybeSendResult() {\n        if (responsesToGo === 0) {\n            if (isInitializer) {\n                chat.displayHtml(`<b>The minimal value is ${value}, owned by ${client}</b>`);\n            } else {\n                parentConnection.send({r: data.r, t: data.t, mt: 'response', value: value, client: client})\n            }\n        }\n    }\n\n    this.onMessage = (data, connection) => {\n        if (data.mt === 'response') {\n            responsesToGo -= 1;\n            if (data.value !== null && data.value < value) {\n                value = data.value;\n                client = data.client;\n            }\n            maybeSendResult();\n        } else {\n            connection.send({r: data.r, t: data.t, mt: 'response', value: null, client: null});\n        }\n    };\n\n    maybeSendResult();\n}\n\n\nfunction MessageAlgorithm(parentConnection, data, connections, chat) {\n    chat.displayMessage(data.sender, data.message);\n    broadcast(data, connections, parentConnection === null ? null : parentConnection.peer);\n    this.onMessage = (data, connection) => {};\n}\n\n\nfunction Chat(messageInput, messageButton, messagesFeed) {\n    const self = this;\n\n    const apikey = '8e675y1tl0nyu8fr';\n\n    const set_n_re = /^\\s*\\/set\\s+(-?\\d+)\\s*$/;\n    const min_re = /^\\s*\\/min\\s*$/;\n    const graph_re = /^\\s*\\/graph\\s*$/;\n    const debug_re = /^\\s*\\/debug\\s*$/;\n\n    self.peer = new Peer({\n        key: apikey,\n        debug: 3,\n        secure: true,\n        logFunction: (a, b, c) => {\n            self.displayDebug(`${a || ''} ${b || ''} ${c || ''}`);\n        }\n    });\n\n    self.value = 0;\n\n    const connections = d3.map();\n    let round = 0;\n    let rounds = {};\n\n    self.doScroll = (height) => {\n        if (window.innerHeight + window.scrollY >= document.body.offsetHeight - height - 50) {\n            window.scrollTo(0, document.body.scrollHeight);\n        }\n    };\n\n    self.displayMessage = (sender, message) => {\n        messagesFeed.append('hr');\n        const element = messagesFeed.append('p');\n        if (sender !== null) {\n            const is_you = sender === self.peer.id;\n            const text = sender + ': ';\n            element.append('span').classed('from-text', true).classed('from-you', is_you).text(text);\n        }\n        const span = element.append('span').text(message);\n        span.html(Autolinker.link(span.html().replace(/\\n/g, '<br>')));\n        self.doScroll(element.node().offsetHeight);\n    };\n\n    self.displayHtml = html => {\n        messagesFeed.append('hr');\n        const element = messagesFeed.append('p').html(html);\n        self.doScroll(element.node().offsetHeight);\n    };\n\n    self.displayDebug = message => {\n        messagesFeed.append('hr').classed('debug', true);\n        const element = messagesFeed.append('p').classed('debug', true).html(message);\n        self.doScroll(element.node().offsetHeight);\n    };\n\n    self.displayError = message => {\n        messagesFeed.append('hr').classed('error', true);\n        const element = messagesFeed.append('p').classed('error', true).html(message);\n        self.doScroll(element.node().offsetHeight);\n    };\n\n    self.connect = id => {\n        if (id === self.peer.id) {\n            self.displayHtml('You cannot connect to yourself.')\n        } else {\n            self.setupNewConnection(self.peer.connect(id));\n        }\n    };\n\n    self.setupNewConnection = (connection) => {\n        const id = connection.peer;\n\n        if (connections.has(id)) {\n            connections.get(id).close();\n            connections.remove(id);\n            self.displayHtml(`Reconnecting to ${id}...`);\n        } else {\n            self.displayHtml(`Connecting to ${id}...`);\n        }\n\n        connections.set(id, connection);\n\n        connection.on('data', (data) => {\n            if (rounds.hasOwnProperty(data.r)) {\n                rounds[data.r].onMessage(data, connection);\n            } else {\n                const t = {'message': MessageAlgorithm, 'min': MinAlgorithm, 'graph': GraphAlgorithm}[data['t']];\n                rounds[data.r] = new t(connection, data, connections, self);\n            }\n        });\n        connection.on('open', () => { self.displayHtml(`Connected to ${id}`); });\n        connection.on('close', () => { self.displayHtml(`Disconnected from ${id}`); });\n        connection.on('error', () => { self.displayError(`Error when working with ${id}`); });\n    };\n\n    self.countActiveConnections = () => {\n        if (connections.empty()) { return 0 }\n        const values = connections.values();\n        let count = 0;\n        for (let i = 0; i < values.length; i += 1) { if (values[i].open) { count += 1; } }\n        return count;\n    };\n\n    function processMessage() {\n        const message = messageInput.node().value;\n\n        if (!message.replace(/\\s/g, '').length) { return; }\n\n        const set_n_match = message.match(set_n_re);\n        const min_match = message.match(min_re);\n        const graph_match = message.match(graph_re);\n        const debug_match = message.match(debug_re);\n\n        round += 1;\n        const r = `${self.peer.id}__${round}`;\n\n        if (set_n_match) {\n            const oldValue = self.value;\n            self.value = parseInt(set_n_match[1]);\n            self.displayHtml(`Changed value: ${oldValue} -> ${self.value}`);\n        } else if (min_match) {\n            const data = {r: r, t: 'min'};\n            rounds[r] = new MinAlgorithm(null, data, connections, self)\n        } else if (graph_match) {\n            const data = {r: r, t: 'graph'};\n            rounds[r] = new GraphAlgorithm(null, data, connections, self)\n        } else if (debug_match) {\n            const body = d3.select(document.body);\n            body.classed('show-debug', !body.classed('show-debug'));\n        } else {\n            if (!self.countActiveConnections()) {\n                self.displayHtml('No active connections found. Please, connect to somebody using the input above.');\n            } else {\n                const data = {r: r, t: 'message', sender: self.peer.id, message: message};\n                rounds[r] = new MessageAlgorithm(null, data, connections, self)\n            }\n        }\n\n        messageInput.node().value = '';\n        messageInput.node().focus();\n    }\n\n    messageButton.on('click', processMessage);\n    messageInput.on('keyup', () => { if (d3.event.ctrlKey && d3.event.keyCode === 13) { processMessage(); } });\n\n    self.peer.on('open', (id) => { self.displayHtml(`Your id is ${id}`); });\n    self.peer.on('connection', (connection) => { self.setupNewConnection(connection); });\n    self.peer.on('error', (err) => { self.displayError(err); })\n}\n"]}